# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# specific tag
trigger:
  tags:
    include:
    - '*'

pr: none

jobs:
- job:
  displayName: 'Linux'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: git submodule update --init --recursive
    displayName: 'Fetch third party dependency'

  - script: |
      sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-xenial -y
      sudo apt-get update -qq
      sudo apt-get -y install qt512base libgl1-mesa-dev qt512svg qt512imageformats
      source /opt/qt*/bin/qt*-env.sh
  - task: CMake@1
    displayName: 'Generate make-files'
    inputs:
      cmakeArgs: '.. -DCMAKE_BUILD_TYPE=Release'


  - script: cd $(Build.SourcesDirectory)/build && make -j 8
    displayName: 'Make'

  - script: VERSION_TAG=`git describe --tags` && echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
    displayName: Set the tag name as an environment variable

  - script: |
      source /opt/qt*/bin/qt*-env.sh
      cd $(Build.SourcesDirectory)/build
      wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" 
      chmod a+x linuxdeployqt*.AppImage
      export VERSION=`git describe --tags`
      mv ../.ci/linux/default.desktop . && mv ../.ci/linux/icon.png .
      ./linuxdeployqt*.AppImage ./CPEditor -appimage
    displayName: 'Package to AppImage'

  - task: GitHubRelease@1
    condition: or(endsWith(variables['Build.SourceBranch'], '-beta'), endsWith(variables['Build.SourceBranch'], '-rc'))
    inputs:
      gitHubConnection: github.com_coder3101
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      tag: $(VERSION_TAG)
      target: '$(Build.SourceVersion)'
      title: 'CP Editor - Beta'
      isPreRelease: true
      assets: $(Build.SourcesDirectory)/build/CP_*
      assetUploadMode: 'replace'
      changeLogCompareToRelease: 'lastNonDraftRelease'
      changeLogType: 'commitBased'

  - task: GitHubRelease@1
    condition:  endsWith(variables['Build.SourceBranch'], '-stable')
    inputs:
      gitHubConnection: github.com_coder3101
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      tag: $(VERSION_TAG)
      target: '$(Build.SourceVersion)'
      title: 'CP Editor - Stable'
      isPreRelease: false
      assets: $(Build.SourcesDirectory)/build/CP_*
      assetUploadMode: 'replace'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'

- job:
  displayName: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      git submodule update --recursive --init
    displayName: 'Fetch dependencies'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  
  - script: |
      cd $(Build.SourcesDirectory)
      python -m pip install aqtinstall
    displayName: 'Install aqtinstall'

  - script: |
      cd $(Build.SourcesDirectory)
      python -m aqt install --outputdir $(Build.BinariesDirectory)\\Qt 5.14.0 windows desktop win64_msvc2017_64
    displayName: 'Install Qt 5.14.0'

  - script: |
      cd $(Build.SourcesDirectory)
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      set CMAKE_PREFIX_PATH=$(Build.BinariesDirectory)\Qt\5.14.0\msvc2017_64\lib\cmake      
      mkdir build
      cd build
      cmake .. -G"Visual Studio 15 2017 Win64"
      cmake --build . --config Release 
    displayName: 'Generate scripts and Make'

  - script: |
      cd $(Build.SourcesDirectory)\build\Release
      mkdir out
      mv CPEditor.exe out/
      $(Build.BinariesDirectory)\Qt\5.14.0\msvc2017_64\bin\windeployqt.exe out\CPEditor.exe --no-translations
    displayName: 'Gather EXE dependencies'

  - task: ChocolateyCommand@0
    inputs:
      command: 'install'
      installPackageId: 'innosetup'

  - powershell: |
      $CI_BUILD_TAG = git describe --tags
      Write-Host "##vso[task.setvariable variable=CI_BUILD_TAG]$CI_BUILD_TAG"
    displayName: 'Set the tag name as an environment variable'

  - script: |
      cd $(Build.SourcesDirectory)
      iscc .ci\win\win-setup.iss -DMyAppVersion=$(CI_BUILD_TAG) -DMyProjectRoot=$(Build.SourcesDirectory) -DMyOutRoot=$(Build.SourcesDirectory)\build\Release\out
      dir . 
    displayName: 'Inno setup compile'
  - task: GitHubRelease@1
    condition: or(endsWith(variables['Build.SourceBranch'], '-beta'), endsWith(variables['Build.SourceBranch'], '-rc')) 
    inputs:
      gitHubConnection: github.com_coder3101
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      title: 'CP Editor - Beta'
      tag: $(CI_BUILD_TAG)
      isPreRelease: true
      assetUploadMode: 'replace' # Optional. Options: delete, replace
      assets: $(Build.SourcesDirectory)/*.exe
      changeLogCompareToRelease: 'lastNonDraftRelease'
      changeLogType: 'commitBased'

  - task: GitHubRelease@1
    condition: endsWith(variables['Build.SourceBranch'], '-stable')
    inputs:
      gitHubConnection: github.com_coder3101
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      title: 'CP Editor - Stable'
      tag: $(CI_BUILD_TAG)
      isPreRelease: false
      assetUploadMode: 'replace' # Optional. Options: delete, replace
      assets: $(Build.SourcesDirectory)/*.exe
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'

